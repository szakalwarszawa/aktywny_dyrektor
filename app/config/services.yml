services:
    my.handler.session_idle:
        class: ParpV1\AuthBundle\Handler\SessionIdleHandler
        arguments: ["@session", "@security.token_storage", "@router", %session_max_idle_time%]
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
    ldap_service:
        class: ParpV1\SoapBundle\Services\LdapService
        arguments: ["@service_container", '@ldap.cache']
        tags: ~
    ldap_admin_service:
            class: ParpV1\SoapBundle\Services\LdapAdminService
            arguments: ["@security.token_storage","@service_container","@doctrine.orm.entity_manager"]
            tags: ~
    gedmo.listener.loggable:
        class: Gedmo\Loggable\LoggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]
    gedmo.listener.softdeleteable:
        class: Gedmo\SoftDeleteable\SoftDeleteableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]
    uprawnienia_service:
        class : ParpV1\MainBundle\Services\UprawnieniaService
        arguments : ["@doctrine.orm.entity_manager","@service_container", '@status_wniosku_service', '@zasoby.cache', '@security.token_storage']
        tags: ~
    zasoby_service:
        class : ParpV1\MainBundle\Services\ZasobyService
        arguments : ["@doctrine.orm.entity_manager","@service_container"]
        tags: ~
    check_access:
        class : ParpV1\MainBundle\Services\AccessCheckerService
        arguments : ["@doctrine.orm.entity_manager","@service_container"]
        tags: ~
    session.memcached:
        class: Memcached
        calls:
            - [ addServer, [ %session_memcached_host%, %session_memcached_port% ]]
    session.handler.memcached:
        class:     Symfony\Component\HttpFoundation\Session\Storage\Handler\MemcachedSessionHandler
        arguments: ["@session.memcached", { prefix: %session_memcached_prefix%, expiretime: %session_memcached_expire% }]
    # KernelRequest listener
    extension.listener:
        class: ParpV1\MainBundle\Listener\DoctrineExtensionListener
        calls:
            - [ setContainer, [ "@service_container" ] ]
        tags:
            # translatable sets locale after router processing
            - { name: kernel.event_listener, event: kernel.request, method: onLateKernelRequest, priority: -10 }
            # loggable hooks user username if one is in security context
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
            # translatable sets locale such as default application locale before command execute
            - { name: kernel.event_listener, event: console.command, method: onConsoleCommand, priority: -10 }
            #- { name: doctrine.event_listener, event: preUpdate, connection: default }
    parp.redmine:
        class: ParpV1\MainBundle\Services\RedmineConnectService
        arguments: ['%redmine_protokol%','%redmine_serwer%','%redmine_uzytkownik%','%redmine_haslo%','%redmine_projekt%',"@service_container"]
    kernel.listener.command_dispatch:
        class: ParpV1\MainBundle\EventListener\ConsoleExceptionListener
        arguments:
            - "@logger"
        tags:
            - { name: kernel.event_listener, event: console.exception }
    adcheck_service:
        class: ParpV1\MainBundle\Services\ADSecurityCheckService
        arguments: ["@service_container"]
        tags: ~
    parp.administrator.glowne_bundle.event_listener.exception_listener:
        class: ParpV1\MainBundle\EventListener\ExceptionListener
        arguments: ["@kernel","@templating"]
        tags:
            - { name: kernel.event_subscriber }
    rename_service:
        class : ParpV1\MainBundle\Services\RenameService
        arguments : ["@doctrine.orm.entity_manager","@service_container"]
        tags: ~
    app.twig_extension:
        class: ParpV1\MainBundle\Twig\StringExtension
        arguments: ["@rename_service", "@ldap_service"]
        public: false
        tags:
            - { name: twig.extension }
    samaccountname_generator:
        class : ParpV1\MainBundle\Services\SamaccountnameGeneratorService
        arguments : ["@doctrine.orm.entity_manager","@service_container"]
        tags: ~
    ldap_import:
        class : ParpV1\SoapBundle\Services\LdapImportService
        arguments : ["@service_container"]
        tags: ~
    wniosekNumer:
        class : ParpV1\MainBundle\Services\WniosekNumerService
        arguments : ["@doctrine.orm.entity_manager","@service_container"]
        tags: ~
    excel_service:
        class: ParpV1\MainBundle\Services\ExcelService
        arguments: ["@service_container" ]
        tags: ~
    parp.mailer:
        class : ParpV1\MainBundle\Services\ParpMailerService
        arguments: ["@doctrine.orm.entity_manager", "@swiftmailer.mailer", "@security.token_storage", "@templating", "@ldap_service", '%id_srodowiska%']
    parp.user_login_service:
        class : ParpV1\AuthBundle\Services\UserLoginService
        arguments: ["@doctrine.orm.entity_manager"]
    lsi_import_service:
        class: ParpV1\MainBundle\Services\Api\LsiImportService
        arguments: ['@doctrine.orm.entity_manager', '@security.token_storage', '%api_token_expire_minutes%']
    wniosek_edit_listener:
        class: ParpV1\MainBundle\EventListener\PersistListener
        tags:
            - { name: doctrine.event_listener, event: prePersist }
    status_wniosku_service:
        class: ParpV1\MainBundle\Services\StatusWnioskuService
        arguments: ['@parp.mailer', '@request_stack', '@session', '@ldap_service', '@doctrine.orm.entity_manager', '@security.token_storage']
    odbieranie_uprawnien_service:
        class: ParpV1\MainBundle\Services\OdbieranieUprawnienService
        arguments: ['@doctrine.orm.entity_manager', '@security.token_storage', '@zasoby_service']
    wnioski_nadanie_odebranie_grid:
        class: ParpV1\MainBundle\Grid\WnioskiNadanieOdebranieGrid
        arguments: ['@grid', '@doctrine.orm.entity_manager', '@security.token_storage', '%ajax_grid_wnioskinadanieodebranie%']
