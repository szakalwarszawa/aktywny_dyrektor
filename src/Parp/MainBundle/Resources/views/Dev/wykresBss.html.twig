{% extends '::base.html.twig' %}

{% block body -%}

    <script src="{{ asset('bower_components/vis/dist/vis.js') }}"></script>
    <link href="{{ asset('bower_components/vis/dist/vis-timeline-graph2d.min.css') }}" rel="stylesheet" type="text/css" />
    <link href="{{ asset('css/wykresyBss.css') }}" rel="stylesheet" type="text/css" />

    <h1>{{ login }}</h1>

    <div id="visualization"></div>

    <pre id="showData"></pre>
    <script type="text/javascript">
        // DOM element where the Timeline will be attached
        var container = document.getElementById('visualization');

        // Create a DataSet (allows two way data-binding)
        var items = new vis.DataSet({{ dane|raw }});

        var groups = new vis.DataSet([
            {id: 'suma', content: 'Suma Uprawnien'},
            {id: 'departament', content: 'Departament'},
            {id: 'sekcja', content: 'Sekcja'},
            {id: 'stanowisko', content: 'Stanowisko'},
            {id: 'zasoby', content: 'Zasoby'}
        ]);
        var container = document.getElementById('visualization');
        var options = {
            start: '{{ zakresMin }}',
            end: '{{ zakresMax }}',
            editable: false,
        };

        var timeline = new vis.Timeline(container, items, groups, options);

        function output(inp) {
            document.body.appendChild(document.createElement('pre')).innerHTML = inp;
        }

        function syntaxHighlight(json) {
            if (typeof json != 'string') {
                json = JSON.stringify(json, undefined, 2);
            }
            json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
            json = json.replace(/\{/g, '<br>{');
            return json.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g, function (match) {
                var cls = 'number';
                if (/^"/.test(match)) {
                    if (/:$/.test(match)) {
                        cls = 'key';
                    } else {
                        cls = 'string';
                    }
                } else if (/true|false/.test(match)) {
                    cls = 'boolean';
                } else if (/null/.test(match)) {
                    cls = 'null';
                }
                return '<span class="' + cls + '">' + match + '</span>';
            });
        }

            //output(syntaxHighlight('{{ dane|raw }}'));

            //$('#showData').html(syntaxHighlight('{{ dane|raw }}'));
    </script>
{%  endblock %}