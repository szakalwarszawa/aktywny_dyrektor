<?php

namespace Parp\MainBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use APY\DataGridBundle\Grid\Mapping as GRID;

/**
 * UserZasoby
 *
 * @ORM\Table(name="wniosek_nadanie_odebranie_zasobow")
 * @ORM\Entity(repositoryClass="Parp\MainBundle\Entity\WniosekNadanieOdebranieZasobowRepository")
 * @APY\DataGridBundle\Grid\Mapping\Source(columns="id,wniosek.status.nazwa,wniosek.createdBy,wniosek.createdAt,wniosek.lockedBy,pracownicy,userZasoby.opis:group_concat,wniosek.editornames")
 * @Gedmo\Mapping\Annotation\SoftDeleteable(fieldName="deletedAt", timeAware=false)
 * @Gedmo\Mapping\Annotation\Loggable(logEntryClass="Parp\MainBundle\Entity\HistoriaWersji")
 */
class WniosekNadanieOdebranieZasobow
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     * @GRID\Column(field="id", title="Numer")
     */
    private $id;
    
    /**
     * @var \DateTime
     * @ORM\Column(type="datetime", nullable=true)
     * @APY\DataGridBundle\Grid\Mapping\Column(visible=false)
    */
    private $deletedAt;
    
    
    /**
     *
     * @ORM\OneToOne(targetEntity="Wniosek", inversedBy="wniosekNadanieOdebranieZasobow")
     * @ORM\JoinColumn(name="wniosek_id", referencedColumnName="id")
     * @GRID\Column(field="wniosek.status.nazwa", title="Status")
     * @GRID\Column(field="wniosek.createdBy", title="Utworzony przez")
     * @GRID\Column(field="wniosek.createdAt", type="date", title="Utworzono")
     * @GRID\Column(field="wniosek.lockedBy", title="Zablokowany przez")
     * @GRID\Column(field="wniosek.lockedAt", type="date", title="Zablokowano")
     * @GRID\Column(field="wniosek.editornames", title="Edytorzy")
     */
    private $wniosek; 
    


    /**
     * @var boolean
     *
     * @ORM\Column(type="boolean", nullable=false)
     * @Gedmo\Mapping\Annotation\Versioned
     */
    private $pracownikSpozaParp = false;
  
    
    /**
     * @var string
     *
     * @ORM\Column(type="string", length=255, nullable=true)
     * @Gedmo\Mapping\Annotation\Versioned
     */
    private $pracownicy;

    
    /**
     * @var string
     *
     * @ORM\OneToMany(targetEntity="UserZasoby", mappedBy="wniosek")
     * @@Gedmo\Mapping\Annotation\Versioned
     * @GRID\Column(field="userZasoby.opis", title="Uprawnienia", filter="select", selectMulti="true")
     */
    private $userZasoby;
    
    
    /**
     * @var integer
     *
     * @ORM\Column(type="integer", nullable=true)
     * @Gedmo\Mapping\Annotation\Versioned
     */
    private $zasobId;
    
    /**
     * @var boolean
     *
     * @ORM\Column(type="boolean", nullable=true)
     * @Gedmo\Mapping\Annotation\Versioned
     */
    private $odebranie = false;
    
    
    

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set deletedAt
     *
     * @param \DateTime $deletedAt
     *
     * @return WniosekNadanieOdebranieZasobow
     */
    public function setDeletedAt($deletedAt)
    {
        $this->deletedAt = $deletedAt;

        return $this;
    }

    /**
     * Get deletedAt
     *
     * @return \DateTime
     */
    public function getDeletedAt()
    {
        return $this->deletedAt;
    }


    /**
     * Set pracownikSpozaParp
     *
     * @param boolean $pracownikSpozaParp
     *
     * @return WniosekNadanieOdebranieZasobow
     */
    public function setPracownikSpozaParp($pracownikSpozaParp)
    {
        $this->pracownikSpozaParp = $pracownikSpozaParp;

        return $this;
    }

    /**
     * Get pracownikSpozaParp
     *
     * @return boolean
     */
    public function getPracownikSpozaParp()
    {
        return $this->pracownikSpozaParp;
    }

    /**
     * Set pracownicy
     *
     * @param string $pracownicy
     *
     * @return WniosekNadanieOdebranieZasobow
     */
    public function setPracownicy($pracownicy)
    {
        $this->pracownicy = $pracownicy;

        return $this;
    }

    /**
     * Get pracownicy
     *
     * @return string
     */
    public function getPracownicy()
    {
        return $this->pracownicy;
    }
    
    /**
     * Set pracownicy
     *
     * @param string $pracownicy
     *
     * @return WniosekNadanieOdebranieZasobow
     */
    public function setPracownicySpozaParp($pracownicy)
    {
        if($this->getPracownikSpozaParp())
            $this->pracownicy = $pracownicy;

        return $this;
    }

    /**
     * Get pracownicy
     *
     * @return string
     */
    public function getPracownicySpozaParp()
    {
        return $this->getPracownikSpozaParp() ? $this->pracownicy : "";
    }

    /**
     * Add userZasoby
     *
     * @param \Parp\MainBundle\Entity\UserZasoby $userZasoby
     *
     * @return WniosekNadanieOdebranieZasobow
     */
    public function addUserZasoby(\Parp\MainBundle\Entity\UserZasoby $userZasoby)
    {
        $this->userZasoby[] = $userZasoby;

        return $this;
    }

    /**
     * Remove userZasoby
     *
     * @param \Parp\MainBundle\Entity\UserZasoby $userZasoby
     */
    public function removeUserZasoby(\Parp\MainBundle\Entity\UserZasoby $userZasoby)
    {
        $this->userZasoby->removeElement($userZasoby);
    }

    /**
     * Get userZasoby
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getUserZasoby()
    {
        return $this->userZasoby;
    }
    
    public function getJsonSams(){
        $ar = explode(",", $this->getPracownicy());
        $ars = array();
        foreach($ar as $a){
            $ars[$a] = 1;
        }
        return json_encode($ars);
    }


    /**
     * Set zasobId
     *
     * @param integer $zasobId
     *
     * @return WniosekNadanieOdebranieZasobow
     */
    public function setZasobId($zasobId)
    {
        $this->zasobId = $zasobId;

        return $this;
    }

    /**
     * Get zasobId
     *
     * @return integer
     */
    public function getZasobId()
    {
        return $this->zasobId;
    }
    
    
    /**
     * Set wniosek
     *
     * @param \Parp\MainBundle\Entity\Wniosek $wniosek
     *
     * @return Wniosek
     */
    public function setWniosek(\Parp\MainBundle\Entity\Wniosek $wniosek = null)
    {
        $this->wniosek = $wniosek;
        $wniosek->setWniosekNadanieOdebranieZasobow($this);
        return $this;
    }

    /**
     * Get wniosek
     *
     * @return \Parp\MainBundle\Entity\Wniosek
     */
    public function getWniosek()
    {
        return $this->wniosek;
    }
    
    
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->setWniosek(new Wniosek());
    }
}
