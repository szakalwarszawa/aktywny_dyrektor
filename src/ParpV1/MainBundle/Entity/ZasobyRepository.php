<?php

namespace ParpV1\MainBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * EntryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ZasobyRepository extends EntityRepository
{

    public function findBySamaccountnames()
    {

        $temps = $this->getRepository("ParpMainBundle:UserZasoby")->findAll();
        print_r($temps);
        die();
        /*
        $query = $this->createQueryBuilder('e')
                ->join('e.userzasoby', 'uz')
                ->where('uz.samaccountname = :sams')
                ->setParameters(array('sams' => "kjakacki"))
                ->getQuery();

        return $query->getResult();
        */
    }

    public function findByGrupaAD($grupa)
    {

        $query = $this->createQueryBuilder('z')
            ->where('z.nazwa like :grupa or z.grupyAD like :grupa ')
            ->setParameters(array('grupa' => "%$grupa%"))
            ->getQuery();
        $results = $query->getResult();
        return count($results) == 1 ? $results[0] : null;
    }

    public function findListaZasobow($aktywne)
    {
        $query = $this->createQueryBuilder('z')
                ->leftJoin('z.wniosekUtworzenieZasobu', 'w')
                ->andWhere('z.published = '.($aktywne ? "1" : "0"))
                ->andWhere('(not w.typWnioskuZmianaWistniejacym = 1 or w.typWnioskuZmianaWistniejacym is null)')
                ->getQuery()
                ->getArrayResult();

        return $query;
    }

    /**
     * Zwraca tablicę osób mogących edytować konkretne wnioski.
     *
     * @return array
     */
    public function findEdytorzyWnioskow()
    {
        $query = $this->createQueryBuilder('z')
                ->select('z')
                ->where('z.deletedAt IS NULL')
                ->andWhere('z.dataUsunieciaZasobu IS NULL')
                ->andWhere('z.published = true')
                ->getQuery();

        $wynik = $query->getResult();

        return $wynik;
    }
}
