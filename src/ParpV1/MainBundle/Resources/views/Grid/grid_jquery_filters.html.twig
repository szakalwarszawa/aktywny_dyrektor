{% extends 'APYDataGridBundle::blocks_js.jquery.html.twig' %}

{% block grid_filters %}
    <tr class="grid-row-filters">
    {% for column in grid.columns %}
        {% if column.visible(grid.isReadyForExport) %}
        <th class="{% if column.class %}{{ column.class }}{% endif %}{% if loop.last %} last-column{% endif %}"{% if(column.size > -1) %} style="width:{{ column.size }}px;"{% endif %}>{% if column.filterable %}{{ grid_filter(column, grid)|raw }}{% endif %}</th>
        {% endif %}
    {% endfor %}
    </tr>
{% endblock grid_filters %}

{% block grid_column_actions_cell %}
    {% set actions = column.getActionsToRender(row) %}
    <ul class="grid-row-actions">
    {% for action in actions %}
        <li>
        {% if action.enabled %}
            <a href="{{ url(action.route, column.routeParameters(row, action), false) }}" target="{{ action.target }}"{% if action.confirm %} onclick="return confirm('{{ action.confirmMessage }}')"{% endif %}{% for name, value in action.attributes %} {{ name }}="{{ value }}" {% endfor %}>{{ action.title|trans }}</a>
        {% else %}
            <span{% for name, value in action.attributes %} {{ name }}="{{ value }}" {% endfor %}>{{ action.title|trans }}</span>
        {% endif %}
        </li>
    {% endfor %}
    </ul>
{% endblock grid_column_actions_cell %}

{% block grid_rows %}
    {% for row in grid.rows %}
    {% set last_row = loop.last %}
    {% spaceless %}
        {% set grid_columns %}
            {% for column in grid.columns %}
                {% if column.visible(grid.isReadyForExport) %}
                    <td class="grid-column-{{ column.renderBlockId }}{% if column.class %} {{ column.class }}{% endif %}{% if column.align != 'left' %} align-{{ column.align }}{% endif %}{% if loop.last %} last-column{% endif %}{% if last_row %} last-row{% endif %}">{{ grid_cell(column, row, grid)|raw }}</td>
                {% endif %}
            {% endfor %}
        {% endset %}
        <tr{% if row.color != '' %} style="background-color:{{ row.color }};"{% endif %} class="grid-row-cells {{ cycle(['odd', 'even'], loop.index) }}{% if row.class != '' %} {{ row.class }}{% endif %}">
        {{ grid_columns }}
    {% endspaceless %}
    </tr>
    {% else %}
        {{ grid_no_result(grid) }}
    {% endfor %}
{% endblock grid_rows %}
